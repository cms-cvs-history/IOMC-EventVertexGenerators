process PROD = 
{

   service = MessageLogger
   {
      untracked vstring destinations = {"cout"}
 
      untracked vstring categories = { "FwkJob", "SimG4CoreApplication" }
 
      untracked PSet cout =
      {
         untracked PSet default = { untracked int32 limit = 0 }  # kill all messages in the log
         untracked PSet FwkJob  = { untracked int32 limit = -1 } # but FwkJob category - those unlimitted
         untracked PSet SimG4CoreApplication = { untracked int32 limit = -1 }
      }
 
      # uncomment if you want it...
      #
      # untracked vstring fwkJobReports = {"FrameworkJobReport.xml"}
   }

   service = Timing{}
      
   service = RandomNumberGeneratorService 
   {
      untracked uint32 sourceSeed = 98765
      PSet moduleSeeds = 
      {
         untracked uint32 VtxSmeared = 12345
      }
   }
   
   include "SimGeneral/HepPDTESSource/data/pdt.cfi"
   
# this will run plig-in energy-flat random particle gun
# and puts particles (HepMCPRoduct) into edm::Event 

   source = FlatRandomEGunSource 
   { 
      untracked int32 maxEvents = 10000
      untracked PSet PGunParameters =
      {
	 # you can request more than 1 particle
	 #untracked vint32  PartID = { 211, 11, -13 }
	 untracked vint32 PartID = {13, -13, -13, 13} 
	 untracked double MinEta = -3.5
	 untracked double MaxEta =  3.5
	 untracked double MinPhi = -3.14159265358979323846
	 untracked double MaxPhi =  3.14159265358979323846
	 untracked double MinE   = 9.99
	 untracked double MaxE   = 10.01
      }
      untracked int32 Verbosity = 0 # for printouts, set it to 1 (or greater)   
   }
   
   include "IOMC/EventVertexGenerators/data/VtxSmearedGauss.cfi"
    
   module VtxTest = VtxTester {}
       
# you can write your particles (HepMCProduct) out into a ROOT file;
# if you want the i/o option, make sure you include it in the path 
#
   module Out = PoolOutputModule { untracked string fileName = "pgun.root" }    
   
   path p1 = { VtxSmeared, VtxTest }
   # path p1 = { VtxTest }
   
   endpath outpath = { Out }

}
