process test = {

  # initialize  MessageLogger
  include "FWCore/MessageLogger/data/MessageLogger.cfi"

  service = RandomNumberGeneratorService
  {
    untracked uint32 sourceSeed = 12345
    PSet moduleSeeds =
    {
       untracked uint32 VtxSmeared = 54321
    }
  }
  
  untracked PSet maxEvents = {untracked int32 input = 100}

  # Pythia Min Bias configuration
source = PythiaSource 
{ 
  #untracked int32 maxEvents = 100
  untracked double comEnergy = 1.399999986e+04
  untracked int32 pythiaPylistVerbosity = 0
  untracked bool pythiaHepMCVerbosity = false
  untracked int32 maxEventsToPrint = 0

  PSet PythiaParameters = {

    # This is a vector of ParameterSet names to be read, in this order
    # The first two are in the include files below
    # The last one are simply my additional parameters
    vstring parameterSets = {
      "pythiaDefault", 
      "pythiaMinBias", 
      "myParameters"
    }

    # Default (mostly empty - to keep PYTHIA default) card file
    # Name of the set is "pythiaDefault"
    #include "IOMC/GeneratorInterface/data/pythiaDefault.cff"
    vstring pythiaDefault={
     'PMAS(5,1)=4.8 ! b quark mass',
     'PMAS(6,1)=172.3 ! t quark mass'
    }	

    vstring pythiaMinBias = {
      'MSEL=1         ! select all processes (aka Min Bias)',
      'MSTP(51)=7     ! select CTEQ 5L structure function',
      'MSTP(81)=0     ! switch off mutiple interactions',
      'MSTJ(22)=2     ! Decay those unstable particles',
      'PARJ(71)=10    ! for which c*tau < 10 mm\n',
      'MSTP(33)=3     ! include k-factor',
      'PARP(82)=3.20  ! cut-off pt for multiple interaction',
      'PARP(89)=1960. ! ',
      'MSTJ(11)=3     ! select fragmentation function "Bowler"',
      'MSTP(61)=1     ! master switch for initial state QED and QCD radiation',
      'MSTP(71)=1     ! master switch for final   state QED and QCD radiation',
      'CKIN(3)=3000.  ! kinematic cut'
    }

    # User cards - name is "myParameters"
    # Pythia's random generator initialization 
    vstring myParameters = {
    #  'MRPY(1)= 123456789 ! Automatically random if -1'
    }
  }
}



  service = Timing{}

 #include "IOMC/EventVertexGenerators/data/VtxSmearedGauss.cfi"
 include "IOMC/EventVertexGenerators/data/VtxSmearedBetafuncNominalCollision.cfi"
 replace VtxSmeared.X0 = 0.
 replace VtxSmeared.Alpha = 0.
 replace VtxSmeared.Phi = 142.0e-6

   
   module VtxTest = BoostTester {}
       
# you can write your particles (HepMCProduct) out into a ROOT file;
# if you want the i/o option, make sure you include it in the path 
#
   module Out = PoolOutputModule { untracked string fileName = "pgun.root" }    
   
   path p1 = { VtxSmeared, VtxTest }
   # path p1 = { VtxTest }
   
   endpath outpath = { Out }

}
